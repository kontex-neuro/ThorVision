name: Windows

on:
  workflow_dispatch:

jobs:
  windows:
    strategy:
      matrix:
        os_arch: [{ os: windows-latest, arch: x64 }]

    runs-on: ${{ matrix.os_arch.os }}

    env:
      OS_ARCH: ${{ matrix.os_arch.os }}-${{ matrix.os_arch.arch }}

    steps:
      - name: Install build dependencies
        run: pip install conan ninja

      - name: Conan cache
        id: conan_cache
        uses: actions/cache@v4
        with:
          path: ~/.conan2
          key: ${{ env.OS_ARCH }}-conan

      - name: GStreamer cache
        id: gstreamer_cache
        uses: actions/cache@v4
        with:
          path: 'C:\gstreamer'
          key: ${{ env.OS_ARCH }}-gstreamer

      - name: Use Native Tools Command Prompt (Windows)
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.os_arch.arch }}

      - name: Clone
        uses: actions/checkout@v4

      - name: Conan setup
        run: conan config install .github/conan_profiles/${{ env.OS_ARCH }} -tf profiles

      - name: Install GStreamer
        run: |
          choco install gstreamer
          choco install gstreamer-devel

          {
            echo 'PKG_CONFIG_PATH<<EOF'
            echo 'C:\gstreamer\1.0\msvc_x86_64\lib\pkgconfig'
            echo EOF
          } >> "$GITHUB_ENV"
          echo "C:\gstreamer\1.0\msvc_x86_64\bin" | Out-File -FilePath $env:GITHUB_PATH -Append
    
      - name: Configure SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: |
            ${{ secrets.SSH_PRIVATE_KEY }} # for xdaqmetadata
            ${{ secrets.TEMP_PRIVATE_KEY }} # TODO: libxvc is a private project for now...

      - name: Add GitHub to the SSH known hosts file
        run: ssh-keyscan -H github.com >> ~/.ssh/known_hosts

      - name: Clone xdaqmetadata
        run: git clone git@github.com:kontex-neuro/xdaqmetadata.git

      - name: Install xdaqmetadata
        working-directory: xdaqmetadata
        run: |
          conan install . -b missing -pr:a ${{ env.OS_ARCH }} -s build_type=Release
          cmake -S . -B build/Release --preset conan-release -G "Ninja" -DCMAKE_BUILD_TYPE=Release
          cmake --build build/Release --preset conan-release
          conan export-pkg . -pr:a ${{ env.OS_ARCH }} -s build_type=Release

      - name: Clone libxvc
        run: git clone git@github.com:kontex-neuro/libxvc.git

      - name: Install libxvc
        working-directory: libxvc
        run: |
          conan install . -b missing -pr:a ${{ env.OS_ARCH }} -s build_type=Release
          cmake -S . -B build/Release --preset conan-release -G "Ninja" -DCMAKE_BUILD_TYPE=Release
          cmake --build build/Release --preset conan-release
          conan export-pkg . -pr:a ${{ env.OS_ARCH }} -s build_type=Release

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.8.0'
          cache: true
          dir: ${{ github.workspace }}

      - name: Build XDAQ-VC
        run: |
          conan install . --build=missing -pr:a ${{ env.OS_ARCH }} -s build_type=Release
          cmake -S . -B build/Release --preset conan-release -G "Ninja" -DCMAKE_BUILD_TYPE=Release
          cmake --build build/Release --preset conan-release
          cmake --build build/Release --preset conan-release --target package

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.OS_ARCH }}
          path: build/Release/XDAQ-VC-0.0.3-win64.exe
